<?xml version="1.0"?>

<!--
CheckSum Tool NAnt build file.

This build file also requires NAntContrib to be setup. Environment variable
NANTCONTRIB_DIR must point to NAntContrib folder.

Targets to call:
# clean - removes build files
# debug - builds debug version
# release - builds release version
# source zip - exports sources and creates zip file from them
# svn_build - exports sources and builds them (release build)
# build_installer - builds installer
# create_bin_zip - creates zip file from binaries + docs

$Id$
-->

<project name="CheckSumTool" default="build">
 	
 	<!-- [1] SETUP -->
 	<!-- Various propertis defining folders and other settings. -->
    <property name="project.name" value="CheckSumTool" />
    <property name="executable.name" value="${project.name}.exe" />

    <property name="project.config" value="debug" overwrite="false" />
	<!-- Relative folder for binaries created -->
    <property name="build.dir" value="../Build/Debug" overwrite="false" />
    
    <!-- SVN repository URL / path -->
    <property name="svn.repository.uri"
        value="https://checksumtool.svn.sourceforge.net/svnroot/checksumtool/trunk"/>
    <!-- Folder for repository builds -->
    <property name="svn.checkout.dir" value="G:/${project.name}/export"/>
    <property name="dist.dir" value="${svn.checkout.dir}/dist/${project.name}" />
    
    <!-- Additional defines for C# compiler -->
    <property name="csc.defines" value=""/>
    
    <!-- Settings for NSIS installer -->
    <property name="nsis.bin" value="C:/Program Files/NSIS/makensis.exe" />
    <property name="nsis.script" value="../installer/NSIS/CheckSumTool.nsi" />
    <property name="nsis.log" value="nsis.log" />
    
    <!-- [2] BUILD TARGETS -->
    <!-- These are directly-callable high-level build targets. -->
    
    <!-- This is directly runnable debug target -->
    <target name="debug" description="Runs debug target">
        <property name="project.config" value="debug" />
        <call target="clean" />
        <call target="build" />
    </target>
    
    <!-- This is directly runnable release target -->
    <target name="release" description="Runs release target">
        <property name="project.config" value="release" />
        <call target="clean" />
        <call target="build" />
    </target>

    <!-- [3] ENVIRONMENT SETUP TARGETS -->
    
    <!-- Called by 'build' target to setup target-specific properties -->
    <target name="init">
        <call target="${project.config}_setup" />
    </target>

    <!-- This target setups environment for debug target -->
    <target name="debug_setup" description="Sets up debug target">
        <echo message="Setting up debug target..."/>
        <property name="project.config" value="debug" />
        <property name="build.debug" value="true" />
        <property name="build.optimize" value="false"/>
        <property name="build.dir" value="../Build/Debug/" />
        <mkdir dir="../Build/Debug" />
    </target>

    <!-- This target setups environment for release target -->
    <target name="release_setup" description="Sets up release target">
        <echo message="Setting up release target..."/>
        <property name="project.config" value="release" />
        <property name="build.debug" value="false" />
        <property name="build.optimize" value="true"/>
        <property name="build.dir" value="../Build/Release/" />
        <mkdir dir="../Build/Release" />
    </target>

    <!-- [4] REPOSITORY BUILD TARGETS -->
    
    <!-- This target exports sources from SVN to separate build folder -->
    <!-- Intent is to do "repository" builds and distributions, not workspace ones. -->
    <target name="svn_export" description="Export sources from SVN">
        <loadtasks assembly="${path::combine(environment::get-variable('NANTCONTRIB_DIR'),
            'bin/NAnt.Contrib.Tasks.dll')}" />
        
        <svn uri="${svn.repository.uri}" destination="${svn.checkout.dir}" verbose="true">
            <arg line="export --force ${svn.repository.uri} ${svn.checkout.dir}"/>
        </svn>
    </target>
    
    <!-- This target creates a ZIP from exported sources -->
    <target name="source_zip" description="Create a zip package from sources"
            depends="svn_export">
        <zip zipfile="${svn.checkout.dir}/${project.name}_src.zip">
            <fileset basedir="${svn.checkout.dir}">
            <include name="**/*"/>
            </fileset>
        </zip>
    </target>
    
    <!-- This target builds sources exported from the SVN repository. -->
    <!-- The idea is to call build file from exported source directory! -->
    <target name="svn_build" description="Build sources exported from SVN"
            depends="svn_export">
        <loadtasks assembly="${path::combine(environment::get-variable('NANTCONTRIB_DIR'),
            'bin/NAnt.Contrib.Tasks.dll')}" />
        
        <!-- We only do release builds from SVN -->
        <property name="build.dir" value="../Build/Release/" />
        <property name="project.config" value="release" />
        
        <!-- Now we have exported sources, lets build them.. -->
        <!-- No need to run clean target as this is clean checkout from SVN! -->
        <nant buildfile="${svn.checkout.dir}/Src/CheckSumTool.build"
                inheritall="true" target="${project.config}"/>
    </target>
    
    <!-- Copy binary files and docs to dist folder for making a zip. -->
    <target name="create_dist" description="Creates distribution folder"
        depends="svn_build">
        <mkdir dir="${dist.dir}" />
        <copy file="${build.dir}${executable.name}" todir="${dist.dir}" />
        <copy file="${svn.checkout.dir}/Documents/Readme.txt" todir="${dist.dir}" />
        <copy file="${svn.checkout.dir}/Documents/COPYING" todir="${dist.dir}" />
    </target>
    
    <!-- Create a binary file zip, including executable + docs. -->
    <target name="create_bin_zip" description="Create binary zip"
        depends="create_dist">
        <zip zipfile="${svn.checkout.dir}/${project.name}_bin.zip">
            <fileset basedir="${dist.dir}">
            <include name="**/*"/>
            </fileset>
        </zip>
    </target>

    <!-- [5] BUILD TARGETS - CALLED BY OTHER TARGETS -->
    
    <!-- This target removes all files copied/created by build -->
    <target name="clean" description="Clean build files">
        <echo message="Cleaning build files." />
        <delete dir="../Build/Debug" includeemptydirs="true" failonerror="false"/>
        <delete dir="../Build/Release" includeemptydirs="true" failonerror="false"/>
    </target>
    
    <target name="build" description="Default build target" depends="init">
        <echo message="Running default build target." />
        <csc target="winexe" output="${build.dir}${executable.name}"
             debug="${build.debug}" optimize="${build.optimize}"
             define="${csc.defines}" win32icon="res/CheckSumTool.ico">
            <sources>
                <include name="*.cs"/>
	        </sources>
            <resources>
                <include name="*.resx" />
            </resources>
        </csc>
    </target>

    <!-- Build NSIS installer -->
    <target name="build_installer" description="Builds NSIS installer">
        <echo message="Building installer..." />
        <exec
            program="${nsis.bin}"
            commandline=" /V3 /O${nsis.log} ${nsis.script}" />
    </target>
</project>
